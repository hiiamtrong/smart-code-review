diff --git a/ai-output.jsonl b/ai-output.jsonl
index 1481315..2cd9b6b 100644
--- a/ai-output.jsonl
+++ b/ai-output.jsonl
@@ -6,17 +6,17 @@
   "severity": "ERROR",
   "diagnostics": [
     {
-      "message": "Assignment instead of comparison in 'checkUser': using '=' instead of '===' or '=='. This can lead to bugs in logic.",
+      "message": "Assignment in condition. Possible mistaken use of '=' instead of '==' or '==='.",
       "location": {
         "path": "index.js",
         "range": {
           "start": {
-            "line": 8,
-            "column": 5
+            "line": 11,
+            "column": 7
           },
           "end": {
-            "line": 8,
-            "column": 6
+            "line": 11,
+            "column": 7
           }
         }
       },
@@ -27,122 +27,59 @@
       }
     },
     {
-      "message": "Assignment instead of comparison in 'testFunction': using '=' instead of '===' or '=='. This can lead to bugs in logic.",
+      "message": "Strict equality check '===' should be used instead of '=='",
       "location": {
         "path": "index.js",
         "range": {
           "start": {
-            "line": 47,
-            "column": 5
-          },
-          "end": {
-            "line": 47,
-            "column": 6
-          }
-        }
-      },
-      "severity": "ERROR",
-      "code": {
-        "value": "ai-review",
-        "url": ""
-      }
-    },
-    {
-      "message": "Security issue - using eval",
-      "location": {
-        "path": "app.py",
-        "range": {
-          "start": {
-            "line": 38,
-            "column": 1
+            "line": 35,
+            "column": 34
           },
           "end": {
-            "line": 38,
-            "column": 1
+            "line": 35,
+            "column": 35
           }
         }
       },
-      "severity": "ERROR",
+      "severity": "WARNING",
       "code": {
         "value": "ai-review",
         "url": ""
       }
     },
     {
-      "message": "Debug mode in production, security risk",
+      "message": "Missing semicolon (;)",
       "location": {
-        "path": "app.py",
+        "path": "index.js",
         "range": {
           "start": {
-            "line": 63,
-            "column": 1
+            "line": 39,
+            "column": 44
           },
           "end": {
-            "line": 63,
-            "column": 1
+            "line": 39,
+            "column": 44
           }
         }
       },
-      "severity": "ERROR",
+      "severity": "WARNING",
       "code": {
         "value": "ai-review",
         "url": ""
       }
     },
     {
-      "message": "Missing error handling for conversion",
+      "message": "Assignment in condition. Possible mistaken use of '=' instead of '==' or '==='.",
       "location": {
-        "path": "main.go",
+        "path": "index.js",
         "range": {
           "start": {
-            "line": 32,
+            "line": 44,
             "column": 7
           },
           "end": {
-            "line": 32,
-            "column": 8
-          }
-        }
-      },
-      "severity": "ERROR",
-      "code": {
-        "value": "ai-review",
-        "url": ""
-      }
-    },
-    {
-      "message": "No input validation",
-      "location": {
-        "path": "main.go",
-        "range": {
-          "start": {
-            "line": 67,
-            "column": 1
-          },
-          "end": {
-            "line": 67,
-            "column": 1
-          }
-        }
-      },
-      "severity": "ERROR",
-      "code": {
-        "value": "ai-review",
-        "url": ""
-      }
-    },
-    {
-      "message": "Missing status code",
-      "location": {
-        "path": "main.go",
-        "range": {
-          "start": {
-            "line": 70,
-            "column": 1
-          },
-          "end": {
-            "line": 70,
-            "column": 1
+            "line": 44,
+            "column": 7
           }
         }
       },
diff --git a/app.py b/app.py
index 69e655f..bfd191e 100644
--- a/app.py
+++ b/app.py
@@ -61,4 +61,9 @@ def process_user_data(name,email,age):  # Missing spaces after commas
     }
 
 # Missing main guard
-app.run(debug=True,host='0.0.0.0')  # Debug mode in production, security risk
\ No newline at end of file
+app.run(debug=True,host='0.0.0.0')  # Debug mode in production, security risk
+
+
+# Unused function
+def unused_function():
+    pass
\ No newline at end of file
diff --git a/index.js b/index.js
index ade4688..961c00c 100644
--- a/index.js
+++ b/index.js
@@ -1,58 +1,63 @@
 // Sample Node.js application with intentional code issues
-const express = require('express');
+const express = require("express");
 
 // Missing semicolon and var usage
-var app = express()
-var port = 3000
+var app = express();
+var port = 3000;
 
 // Assignment instead of comparison
 function checkUser(user) {
-    if (user.id = 1) {  // Should be === or ==
-        console.log("Admin user");
-    }
-
-    // Unused variable
-    let unusedVar = "this will never be used";
-
-    // Missing return statement
-    if (user.role === 'admin') {
-        user.permissions = ['read', 'write', 'delete']
-    }
+  if ((user.id = 1)) {
+    // Should be === or ==
+    console.log("Admin user");
+  }
+
+  // Unused variable
+  let unusedVar = "this will never be used";
+
+  // Missing return statement
+  if (user.role === "admin") {
+    user.permissions = ["read", "write", "delete"];
+  }
 }
 
 // Function with no error handling
-app.get('/api/users/:id', (req, res) => {
-    const userId = req.params.id;
+app.get("/api/users/:id", (req, res) => {
+  const userId = req.params.id;
 
-    // No input validation
-    const user = getUserById(userId);
-    res.json(user);
+  // No input validation
+  const user = getUserById(userId);
+  res.json(user);
 });
 
 // Function that could throw error
 function getUserById(id) {
-    const users = [
-        { id: 1, name: 'John', role: 'admin' },
-        { id: 2, name: 'Jane', role: 'user' }
-    ];
+  const users = [
+    { id: 1, name: "John", role: "admin" },
+    { id: 2, name: "Jane", role: "user" },
+  ];
 
-    return users.find(user => user.id == id);  // Should use strict equality
+  return users.find((user) => user.id == id); // Should use strict equality
 }
 
 // Missing error handling in server start
 app.listen(port, () => {
-    console.log(`Server running on port ${port}`)  // Missing semicolon
-});// Added a new function with issues
+  console.log(`Server running on port ${port}`); // Missing semicolon
+}); // Added a new function with issues
 function testFunction() {
-    var x = 1
-    if (x = 2) {  // Assignment instead of comparison
-        console.log('This has issues')
-    }
+  var x = 1;
+  if ((x = 2)) {
+    // Assignment instead of comparison
+    console.log("This has issues");
+  }
 }
 
-
-// Intentional syntax error
-function syntaxErrorFunc() {
-    console.log("This function has a syntax error"
+function infiniteLoop() {
+  while (true) {
+    console.log("This will run forever");
+    break;
+  }
 }
 
+infiniteLoop();
+// NEW COMMENT
